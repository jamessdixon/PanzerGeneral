//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Tff.Panzer.Services
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PanzerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PanzerEntities object using the connection string found in the 'PanzerEntities' section of the application configuration file.
        /// </summary>
        public PanzerEntities() : base("name=PanzerEntities", "PanzerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PanzerEntities object.
        /// </summary>
        public PanzerEntities(string connectionString) : base(connectionString, "PanzerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PanzerEntities object.
        /// </summary>
        public PanzerEntities(EntityConnection connection) : base(connection, "PanzerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Panzer_Scenario> Panzer_Scenario
        {
            get
            {
                if ((_Panzer_Scenario == null))
                {
                    _Panzer_Scenario = base.CreateObjectSet<Panzer_Scenario>("Panzer_Scenario");
                }
                return _Panzer_Scenario;
            }
        }
        private ObjectSet<Panzer_Scenario> _Panzer_Scenario;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Panzer_ScenarioTile> Panzer_ScenarioTile
        {
            get
            {
                if ((_Panzer_ScenarioTile == null))
                {
                    _Panzer_ScenarioTile = base.CreateObjectSet<Panzer_ScenarioTile>("Panzer_ScenarioTile");
                }
                return _Panzer_ScenarioTile;
            }
        }
        private ObjectSet<Panzer_ScenarioTile> _Panzer_ScenarioTile;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Panzer_Scenario EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPanzer_Scenario(Panzer_Scenario panzer_Scenario)
        {
            base.AddObject("Panzer_Scenario", panzer_Scenario);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Panzer_ScenarioTile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPanzer_ScenarioTile(Panzer_ScenarioTile panzer_ScenarioTile)
        {
            base.AddObject("Panzer_ScenarioTile", panzer_ScenarioTile);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Data", Name="Panzer_Scenario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Panzer_Scenario : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Panzer_Scenario object.
        /// </summary>
        /// <param name="scenarioId">Initial value of the ScenarioId property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="scenarioDescription">Initial value of the ScenarioDescription property.</param>
        /// <param name="turns">Initial value of the Turns property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="day">Initial value of the Day property.</param>
        /// <param name="turnsPerDay">Initial value of the TurnsPerDay property.</param>
        /// <param name="daysPerTurn">Initial value of the DaysPerTurn property.</param>
        /// <param name="currentWeather">Initial value of the CurrentWeather property.</param>
        /// <param name="weatherZone">Initial value of the WeatherZone property.</param>
        /// <param name="maxUnitStrength">Initial value of the MaxUnitStrength property.</param>
        /// <param name="maxUnitExperience">Initial value of the MaxUnitExperience property.</param>
        /// <param name="activeInd">Initial value of the ActiveInd property.</param>
        public static Panzer_Scenario CreatePanzer_Scenario(global::System.Int32 scenarioId, global::System.String scenarioName, global::System.String scenarioDescription, global::System.Int32 turns, global::System.Int32 year, global::System.Int32 month, global::System.Int32 day, global::System.Int32 turnsPerDay, global::System.Int32 daysPerTurn, global::System.Int32 currentWeather, global::System.Int32 weatherZone, global::System.Int32 maxUnitStrength, global::System.Int32 maxUnitExperience, global::System.Boolean activeInd)
        {
            Panzer_Scenario panzer_Scenario = new Panzer_Scenario();
            panzer_Scenario.ScenarioId = scenarioId;
            panzer_Scenario.ScenarioName = scenarioName;
            panzer_Scenario.ScenarioDescription = scenarioDescription;
            panzer_Scenario.Turns = turns;
            panzer_Scenario.Year = year;
            panzer_Scenario.Month = month;
            panzer_Scenario.Day = day;
            panzer_Scenario.TurnsPerDay = turnsPerDay;
            panzer_Scenario.DaysPerTurn = daysPerTurn;
            panzer_Scenario.CurrentWeather = currentWeather;
            panzer_Scenario.WeatherZone = weatherZone;
            panzer_Scenario.MaxUnitStrength = maxUnitStrength;
            panzer_Scenario.MaxUnitExperience = maxUnitExperience;
            panzer_Scenario.ActiveInd = activeInd;
            return panzer_Scenario;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScenarioId
        {
            get
            {
                return _ScenarioId;
            }
            set
            {
                if (_ScenarioId != value)
                {
                    OnScenarioIdChanging(value);
                    ReportPropertyChanging("ScenarioId");
                    _ScenarioId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScenarioId");
                    OnScenarioIdChanged();
                }
            }
        }
        private global::System.Int32 _ScenarioId;
        partial void OnScenarioIdChanging(global::System.Int32 value);
        partial void OnScenarioIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                OnScenarioNameChanging(value);
                ReportPropertyChanging("ScenarioName");
                _ScenarioName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScenarioName");
                OnScenarioNameChanged();
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioDescription
        {
            get
            {
                return _ScenarioDescription;
            }
            set
            {
                OnScenarioDescriptionChanging(value);
                ReportPropertyChanging("ScenarioDescription");
                _ScenarioDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScenarioDescription");
                OnScenarioDescriptionChanged();
            }
        }
        private global::System.String _ScenarioDescription;
        partial void OnScenarioDescriptionChanging(global::System.String value);
        partial void OnScenarioDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Turns
        {
            get
            {
                return _Turns;
            }
            set
            {
                OnTurnsChanging(value);
                ReportPropertyChanging("Turns");
                _Turns = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Turns");
                OnTurnsChanged();
            }
        }
        private global::System.Int32 _Turns;
        partial void OnTurnsChanging(global::System.Int32 value);
        partial void OnTurnsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private global::System.Int32 _Day;
        partial void OnDayChanging(global::System.Int32 value);
        partial void OnDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TurnsPerDay
        {
            get
            {
                return _TurnsPerDay;
            }
            set
            {
                OnTurnsPerDayChanging(value);
                ReportPropertyChanging("TurnsPerDay");
                _TurnsPerDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TurnsPerDay");
                OnTurnsPerDayChanged();
            }
        }
        private global::System.Int32 _TurnsPerDay;
        partial void OnTurnsPerDayChanging(global::System.Int32 value);
        partial void OnTurnsPerDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DaysPerTurn
        {
            get
            {
                return _DaysPerTurn;
            }
            set
            {
                OnDaysPerTurnChanging(value);
                ReportPropertyChanging("DaysPerTurn");
                _DaysPerTurn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysPerTurn");
                OnDaysPerTurnChanged();
            }
        }
        private global::System.Int32 _DaysPerTurn;
        partial void OnDaysPerTurnChanging(global::System.Int32 value);
        partial void OnDaysPerTurnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrentWeather
        {
            get
            {
                return _CurrentWeather;
            }
            set
            {
                OnCurrentWeatherChanging(value);
                ReportPropertyChanging("CurrentWeather");
                _CurrentWeather = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentWeather");
                OnCurrentWeatherChanged();
            }
        }
        private global::System.Int32 _CurrentWeather;
        partial void OnCurrentWeatherChanging(global::System.Int32 value);
        partial void OnCurrentWeatherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WeatherZone
        {
            get
            {
                return _WeatherZone;
            }
            set
            {
                OnWeatherZoneChanging(value);
                ReportPropertyChanging("WeatherZone");
                _WeatherZone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeatherZone");
                OnWeatherZoneChanged();
            }
        }
        private global::System.Int32 _WeatherZone;
        partial void OnWeatherZoneChanging(global::System.Int32 value);
        partial void OnWeatherZoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxUnitStrength
        {
            get
            {
                return _MaxUnitStrength;
            }
            set
            {
                OnMaxUnitStrengthChanging(value);
                ReportPropertyChanging("MaxUnitStrength");
                _MaxUnitStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxUnitStrength");
                OnMaxUnitStrengthChanged();
            }
        }
        private global::System.Int32 _MaxUnitStrength;
        partial void OnMaxUnitStrengthChanging(global::System.Int32 value);
        partial void OnMaxUnitStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxUnitExperience
        {
            get
            {
                return _MaxUnitExperience;
            }
            set
            {
                OnMaxUnitExperienceChanging(value);
                ReportPropertyChanging("MaxUnitExperience");
                _MaxUnitExperience = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxUnitExperience");
                OnMaxUnitExperienceChanged();
            }
        }
        private global::System.Int32 _MaxUnitExperience;
        partial void OnMaxUnitExperienceChanging(global::System.Int32 value);
        partial void OnMaxUnitExperienceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveInd
        {
            get
            {
                return _ActiveInd;
            }
            set
            {
                OnActiveIndChanging(value);
                ReportPropertyChanging("ActiveInd");
                _ActiveInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveInd");
                OnActiveIndChanged();
            }
        }
        private global::System.Boolean _ActiveInd;
        partial void OnActiveIndChanging(global::System.Boolean value);
        partial void OnActiveIndChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Data", Name="Panzer_ScenarioTile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Panzer_ScenarioTile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Panzer_ScenarioTile object.
        /// </summary>
        /// <param name="scenarioTileId">Initial value of the ScenarioTileId property.</param>
        /// <param name="scenarioId">Initial value of the ScenarioId property.</param>
        /// <param name="columnNumber">Initial value of the ColumnNumber property.</param>
        /// <param name="rowNumber">Initial value of the RowNumber property.</param>
        /// <param name="terrainId">Initial value of the TerrainId property.</param>
        /// <param name="tileNameId">Initial value of the TileNameId property.</param>
        /// <param name="nationId">Initial value of the NationId property.</param>
        /// <param name="sideId">Initial value of the SideId property.</param>
        /// <param name="roadConnectivityInd">Initial value of the RoadConnectivityInd property.</param>
        /// <param name="deployTileInd">Initial value of the DeployTileInd property.</param>
        /// <param name="supplyTileInd">Initial value of the SupplyTileInd property.</param>
        /// <param name="victoryTileInd">Initial value of the VictoryTileInd property.</param>
        public static Panzer_ScenarioTile CreatePanzer_ScenarioTile(global::System.Int32 scenarioTileId, global::System.Int32 scenarioId, global::System.Int32 columnNumber, global::System.Int32 rowNumber, global::System.Int32 terrainId, global::System.Int32 tileNameId, global::System.Int32 nationId, global::System.Int32 sideId, global::System.Boolean roadConnectivityInd, global::System.Boolean deployTileInd, global::System.Boolean supplyTileInd, global::System.Boolean victoryTileInd)
        {
            Panzer_ScenarioTile panzer_ScenarioTile = new Panzer_ScenarioTile();
            panzer_ScenarioTile.ScenarioTileId = scenarioTileId;
            panzer_ScenarioTile.ScenarioId = scenarioId;
            panzer_ScenarioTile.ColumnNumber = columnNumber;
            panzer_ScenarioTile.RowNumber = rowNumber;
            panzer_ScenarioTile.TerrainId = terrainId;
            panzer_ScenarioTile.TileNameId = tileNameId;
            panzer_ScenarioTile.NationId = nationId;
            panzer_ScenarioTile.SideId = sideId;
            panzer_ScenarioTile.RoadConnectivityInd = roadConnectivityInd;
            panzer_ScenarioTile.DeployTileInd = deployTileInd;
            panzer_ScenarioTile.SupplyTileInd = supplyTileInd;
            panzer_ScenarioTile.VictoryTileInd = victoryTileInd;
            return panzer_ScenarioTile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScenarioTileId
        {
            get
            {
                return _ScenarioTileId;
            }
            set
            {
                if (_ScenarioTileId != value)
                {
                    OnScenarioTileIdChanging(value);
                    ReportPropertyChanging("ScenarioTileId");
                    _ScenarioTileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScenarioTileId");
                    OnScenarioTileIdChanged();
                }
            }
        }
        private global::System.Int32 _ScenarioTileId;
        partial void OnScenarioTileIdChanging(global::System.Int32 value);
        partial void OnScenarioTileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScenarioId
        {
            get
            {
                return _ScenarioId;
            }
            set
            {
                OnScenarioIdChanging(value);
                ReportPropertyChanging("ScenarioId");
                _ScenarioId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScenarioId");
                OnScenarioIdChanged();
            }
        }
        private global::System.Int32 _ScenarioId;
        partial void OnScenarioIdChanging(global::System.Int32 value);
        partial void OnScenarioIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColumnNumber
        {
            get
            {
                return _ColumnNumber;
            }
            set
            {
                OnColumnNumberChanging(value);
                ReportPropertyChanging("ColumnNumber");
                _ColumnNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColumnNumber");
                OnColumnNumberChanged();
            }
        }
        private global::System.Int32 _ColumnNumber;
        partial void OnColumnNumberChanging(global::System.Int32 value);
        partial void OnColumnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RowNumber
        {
            get
            {
                return _RowNumber;
            }
            set
            {
                OnRowNumberChanging(value);
                ReportPropertyChanging("RowNumber");
                _RowNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowNumber");
                OnRowNumberChanged();
            }
        }
        private global::System.Int32 _RowNumber;
        partial void OnRowNumberChanging(global::System.Int32 value);
        partial void OnRowNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TerrainId
        {
            get
            {
                return _TerrainId;
            }
            set
            {
                OnTerrainIdChanging(value);
                ReportPropertyChanging("TerrainId");
                _TerrainId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerrainId");
                OnTerrainIdChanged();
            }
        }
        private global::System.Int32 _TerrainId;
        partial void OnTerrainIdChanging(global::System.Int32 value);
        partial void OnTerrainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TileNameId
        {
            get
            {
                return _TileNameId;
            }
            set
            {
                OnTileNameIdChanging(value);
                ReportPropertyChanging("TileNameId");
                _TileNameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TileNameId");
                OnTileNameIdChanged();
            }
        }
        private global::System.Int32 _TileNameId;
        partial void OnTileNameIdChanging(global::System.Int32 value);
        partial void OnTileNameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NationId
        {
            get
            {
                return _NationId;
            }
            set
            {
                OnNationIdChanging(value);
                ReportPropertyChanging("NationId");
                _NationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NationId");
                OnNationIdChanged();
            }
        }
        private global::System.Int32 _NationId;
        partial void OnNationIdChanging(global::System.Int32 value);
        partial void OnNationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SideId
        {
            get
            {
                return _SideId;
            }
            set
            {
                OnSideIdChanging(value);
                ReportPropertyChanging("SideId");
                _SideId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SideId");
                OnSideIdChanged();
            }
        }
        private global::System.Int32 _SideId;
        partial void OnSideIdChanging(global::System.Int32 value);
        partial void OnSideIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RoadConnectivityInd
        {
            get
            {
                return _RoadConnectivityInd;
            }
            set
            {
                OnRoadConnectivityIndChanging(value);
                ReportPropertyChanging("RoadConnectivityInd");
                _RoadConnectivityInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoadConnectivityInd");
                OnRoadConnectivityIndChanged();
            }
        }
        private global::System.Boolean _RoadConnectivityInd;
        partial void OnRoadConnectivityIndChanging(global::System.Boolean value);
        partial void OnRoadConnectivityIndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DeployTileInd
        {
            get
            {
                return _DeployTileInd;
            }
            set
            {
                OnDeployTileIndChanging(value);
                ReportPropertyChanging("DeployTileInd");
                _DeployTileInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeployTileInd");
                OnDeployTileIndChanged();
            }
        }
        private global::System.Boolean _DeployTileInd;
        partial void OnDeployTileIndChanging(global::System.Boolean value);
        partial void OnDeployTileIndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SupplyTileInd
        {
            get
            {
                return _SupplyTileInd;
            }
            set
            {
                OnSupplyTileIndChanging(value);
                ReportPropertyChanging("SupplyTileInd");
                _SupplyTileInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplyTileInd");
                OnSupplyTileIndChanged();
            }
        }
        private global::System.Boolean _SupplyTileInd;
        partial void OnSupplyTileIndChanging(global::System.Boolean value);
        partial void OnSupplyTileIndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean VictoryTileInd
        {
            get
            {
                return _VictoryTileInd;
            }
            set
            {
                OnVictoryTileIndChanging(value);
                ReportPropertyChanging("VictoryTileInd");
                _VictoryTileInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VictoryTileInd");
                OnVictoryTileIndChanged();
            }
        }
        private global::System.Boolean _VictoryTileInd;
        partial void OnVictoryTileIndChanging(global::System.Boolean value);
        partial void OnVictoryTileIndChanged();

        #endregion

    
    }

    #endregion

    
}
